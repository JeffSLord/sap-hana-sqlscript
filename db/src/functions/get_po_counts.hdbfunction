FUNCTION "get_po_counts"(im_fdate DATE)
    RETURNS TABLE (
    	EMPLOYEEID NVARCHAR(10),
		FULLNAME NVARCHAR(256),
		CREATE_CNT INTEGER,
		CHANGE_CNT INTEGER,
		COMBINED_CNT INTEGER
    )
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
    ex_po_create_cnt = SELECT COUNT(*) AS CREATE_CNT, "HISTORY.CREATEDBY.EMPLOYEEID" AS EID
	FROM "PO.Header"
	WHERE PURCHASEORDERID 
	IN (
    	SELECT PURCHASEORDERID
        FROM "PO.Item"
        WHERE "PRODUCT.PRODUCTID" IS NOT NULL AND MONTH("HISTORY.CREATEDAT") = MONTH(:im_fdate)
	)
    GROUP BY  "HISTORY.CREATEDBY.EMPLOYEEID";

	ex_po_change_cnt = SELECT COUNT(*) AS CHANGE_CNT, "HISTORY.CHANGEDBY.EMPLOYEEID" AS EID
    FROM "PO.Header"  
    WHERE PURCHASEORDERID 
    IN (
        SELECT PURCHASEORDERID
        FROM "PO.Item"
        WHERE "PRODUCT.PRODUCTID" IS NOT NULL AND MONTH("HISTORY.CHANGEDAT") = MONTH(:im_fdate)
    )
	GROUP BY "HISTORY.CHANGEDBY.EMPLOYEEID";

	EMP_PO_COMBINED_CNT = 
	SELECT EMPLOYEEID, "get_full_name"( "NAME.FIRST", "NAME.MIDDLE", "NAME.LAST") as FULLNAME,
	crcnt.CREATE_CNT, chcnt.CHANGE_CNT,  crcnt.CREATE_CNT + chcnt.CHANGE_CNT AS COMBINED_CNT
    FROM "MD.Employees" as emp
    LEFT OUTER JOIN :ex_po_create_cnt AS crcnt
    	ON emp.EMPLOYEEID = crcnt.EID
    LEFT OUTER JOIN :ex_po_change_cnt AS chcnt
    	ON emp.EMPLOYEEID = chcnt.EID
    ORDER BY COMBINED_CNT DESC;
    
    RETURN SELECT * FROM :EMP_PO_COMBINED_CNT;
END;